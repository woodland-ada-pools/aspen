{"version":3,"sources":["../node_modules/date-fns/locale/kk/_lib/formatRelative/index.js","../node_modules/date-fns/_lib/isSameUTCWeek/index.js"],"names":["Object","defineProperty","exports","value","default","token","date","baseDate","options","format","formatRelativeLocale","obj","_index","require","__esModule","accusativeWeekdays","thisWeek","day","lastWeek","getUTCDay","yesterday","today","tomorrow","nextWeek","other","module","dirtyDateLeft","dirtyDateRight","_index2","arguments","dateLeftStartOfWeek","dateRightStartOfWeek","getTime","_interopRequireDefault"],"mappings":"iGAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAgDR,SAAwBC,EAAOC,EAAMC,EAAUC,GAC7C,IAAIC,EAASC,EAAqBL,GAElC,GAAsB,oBAAXI,EACT,OAAOA,EAAOH,EAAMC,EAAUC,GAGhC,OAAOC,GArDT,IAEgCE,EAF5BC,GAE4BD,EAFIE,EAAQ,OAESF,EAAIG,WAAaH,EAAM,CAAEP,QAASO,GAEvF,IAAII,EAAqB,CAAC,+DAAc,+DAAc,+DAAc,+DAAc,+DAAc,uCAAU,8CAO1G,SAASC,EAASC,GAEhB,MAAO,IADOF,EAAmBE,GACV,oDAQzB,IAAIP,EAAuB,CACzBQ,SAAU,SAAUZ,EAAMC,EAAUC,GAClC,IAAIS,EAAMX,EAAKa,YAEf,OAAI,EAAIP,EAAOR,SAASE,EAAMC,EAAUC,GAC/BQ,EAASC,GApBtB,SAAkBA,GAEhB,MAAO,mCADOF,EAAmBE,GACJ,oDAoBlBC,CAASD,IAGpBG,UAAW,6EACXC,MAAO,mFACPC,SAAU,mFACVC,SAAU,SAAUjB,EAAMC,EAAUC,GAClC,IAAIS,EAAMX,EAAKa,YAEf,OAAI,EAAIP,EAAOR,SAASE,EAAMC,EAAUC,GAC/BQ,EAASC,GAtBtB,SAAkBA,GAEhB,MAAO,yCADOF,EAAmBE,GACH,oDAsBnBM,CAASN,IAGpBO,MAAO,KAaTC,EAAOvB,QAAUA,EAAQE,S,iCC7DzBJ,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAUR,SAAuBsB,EAAeC,EAAgBnB,IACpD,EAAIoB,EAAQxB,SAAS,EAAGyB,WACxB,IAAIC,GAAsB,EAAIlB,EAAOR,SAASsB,EAAelB,GACzDuB,GAAuB,EAAInB,EAAOR,SAASuB,EAAgBnB,GAC/D,OAAOsB,EAAoBE,YAAcD,EAAqBC,WAZhE,IAAIpB,EAASqB,EAAuBpB,EAAQ,KAExCe,EAAUK,EAAuBpB,EAAQ,IAE7C,SAASoB,EAAuBtB,GAAO,OAAOA,GAAOA,EAAIG,WAAaH,EAAM,CAAEP,QAASO,GAWvFc,EAAOvB,QAAUA,EAAQE","file":"static/js/74.66b4e675.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatRelative;\n\nvar _index = _interopRequireDefault(require(\"../../../../_lib/isSameUTCWeek/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar accusativeWeekdays = ['жексенбіде', 'дүйсенбіде', 'сейсенбіде', 'сәрсенбіде', 'бейсенбіде', 'жұмада', 'сенбіде'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'өткен \" + weekday + \" сағат' p'-де'\";\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'\" + weekday + \" сағат' p'-де'\";\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  return \"'келесі \" + weekday + \" сағат' p'-де'\";\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if ((0, _index.default)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'кеше сағат' p'-де'\",\n  today: \"'бүгін сағат' p'-де'\",\n  tomorrow: \"'ертең сағат' p'-де'\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if ((0, _index.default)(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\n\nfunction formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSameUTCWeek;\n\nvar _index = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\nfunction isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  (0, _index2.default)(2, arguments);\n  var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, options);\n  var dateRightStartOfWeek = (0, _index.default)(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\nmodule.exports = exports.default;"],"sourceRoot":""}